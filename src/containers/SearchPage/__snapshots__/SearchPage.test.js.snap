// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchPageWithList matches snapshot 1`] = `
<Page
  description="SearchPage.schemaDescription"
  schema={
    Object {
      "@context": "http://schema.org",
      "@type": "SearchResultsPage",
      "description": "SearchPage.schemaDescription",
      "mainEntity": Array [
        "{\\"@type\\":\\"ItemList\\",\\"name\\":\\"SearchPage.schemaForSearch\\",\\"itemListOrder\\":\\"http://schema.org/ItemListOrderAscending\\",\\"itemListElement\\":[]}",
      ],
      "name": "SearchPage.schemaTitle",
    }
  }
  scrollingDisabled={false}
  title="SearchPage.schemaTitle"
>
  <withRouter(Connect(TopbarContainerComponent))
    className="topbar"
    currentPage="SearchPage"
    currentSearchParams={Object {}}
  />
  <div
    className="layoutWrapperContainer"
  >
    <aside
      className="layoutWrapperFilterColumn"
    >
      <div
        className="filterColumnContent"
      >
        <FilterComponent
          className="filter"
          config={
            Object {
              "editListingPageConfig": Object {
                "label": "Category",
              },
              "includeForProcessAliases": Array [
                "flex-product-default-process/release-1",
              ],
              "indexForSearch": true,
              "key": "category",
              "listingPageConfig": Object {
                "label": "Category",
              },
              "schemaOptions": Array [
                Object {
                  "label": "Cat 1",
                  "option": "cat_1",
                },
                Object {
                  "label": "Cat 2",
                  "option": "cat_2",
                },
              ],
              "schemaType": "enum",
              "scope": "public",
              "searchPageConfig": Object {
                "group": "primary",
                "label": "Category",
              },
            }
          }
          getHandleChangedValueFn={[Function]}
          idPrefix="SearchFiltersMobile"
          initialValues={[Function]}
          intl={
            Object {
              "formatDate": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatPlural": [Function],
              "formatRelativeTime": [Function],
              "formatTime": [Function],
              "now": [Function],
            }
          }
          isDesktop={true}
          key="SearchFiltersMobile.category"
          liveEdit={true}
          showAsPopup={false}
          urlQueryParams={Object {}}
        />
        <FilterComponent
          className="filter"
          config={
            Object {
              "key": "price",
              "label": "Price",
              "max": 1000,
              "min": 0,
              "schemaType": "price",
              "step": 5,
            }
          }
          getHandleChangedValueFn={[Function]}
          idPrefix="SearchFiltersMobile"
          initialValues={[Function]}
          intl={
            Object {
              "formatDate": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatPlural": [Function],
              "formatRelativeTime": [Function],
              "formatTime": [Function],
              "now": [Function],
            }
          }
          isDesktop={true}
          key="SearchFiltersMobile.price"
          liveEdit={true}
          showAsPopup={false}
          urlQueryParams={Object {}}
        />
        <FilterComponent
          className="filter"
          config={
            Object {
              "key": "keywords",
              "label": "Keyword",
              "schemaType": "text",
            }
          }
          getHandleChangedValueFn={[Function]}
          idPrefix="SearchFiltersMobile"
          initialValues={[Function]}
          intl={
            Object {
              "formatDate": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatPlural": [Function],
              "formatRelativeTime": [Function],
              "formatTime": [Function],
              "now": [Function],
            }
          }
          isDesktop={true}
          key="SearchFiltersMobile.keywords"
          liveEdit={true}
          showAsPopup={false}
          urlQueryParams={Object {}}
        />
        <FilterComponent
          className="filter"
          config={
            Object {
              "editListingPageConfig": Object {
                "label": "Category",
              },
              "includeForProcessAliases": Array [
                "flex-booking-default-process/release-1",
              ],
              "indexForSearch": true,
              "key": "amenities",
              "listingPageConfig": Object {
                "label": "Category",
              },
              "schemaOptions": Array [
                Object {
                  "label": "Dog 1",
                  "option": "dog_1",
                },
                Object {
                  "label": "Dog 2",
                  "option": "dog_2",
                },
              ],
              "schemaType": "multi-enum",
              "scope": "public",
              "searchPageConfig": Object {
                "group": "secondary",
                "label": "Amenities",
              },
            }
          }
          getHandleChangedValueFn={[Function]}
          idPrefix="SearchFiltersMobile"
          initialValues={[Function]}
          intl={
            Object {
              "formatDate": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatPlural": [Function],
              "formatRelativeTime": [Function],
              "formatTime": [Function],
              "now": [Function],
            }
          }
          isDesktop={true}
          key="SearchFiltersMobile.amenities"
          liveEdit={true}
          showAsPopup={false}
          urlQueryParams={Object {}}
        />
        <button
          className="resetAllButton"
          onClick={[Function]}
        >
          <MemoizedFormattedMessage
            id="SearchFiltersMobile.resetAll"
          />
        </button>
      </div>
    </aside>
    <div
      className="layoutWrapperMain"
      role="main"
    >
      <div
        className="searchResultContainer"
      >
        <SearchFiltersMobile
          className="searchFiltersMobileList"
          isMapVariant={false}
          listingsAreLoaded={true}
          noResultsInfo={
            <NoSearchResultsMaybe
              listingsAreLoaded={true}
              location={
                Object {
                  "search": "",
                }
              }
              resetAll={[Function]}
              totalItems={22}
            />
          }
          onCloseModal={[Function]}
          onManageDisableScrolling={[Function]}
          onOpenModal={[Function]}
          resetAll={[Function]}
          resultsCount={22}
          searchInProgress={false}
          searchListingsError={null}
          selectedFiltersCount={0}
          showAsModalMaxWidth={768}
          sortByComponent={
            <injectIntl(SortBy)
              contentPlacementOffset={-14}
              hasConflictingFilters={false}
              isConflictingFilterActive={false}
              mode="mobile"
              onSelect={[Function]}
              selectedFilters={Object {}}
              showAsPopup={true}
            />
          }
          urlQueryParams={Object {}}
        >
          <FilterComponent
            config={
              Object {
                "editListingPageConfig": Object {
                  "label": "Category",
                },
                "includeForProcessAliases": Array [
                  "flex-product-default-process/release-1",
                ],
                "indexForSearch": true,
                "key": "category",
                "listingPageConfig": Object {
                  "label": "Category",
                },
                "schemaOptions": Array [
                  Object {
                    "label": "Cat 1",
                    "option": "cat_1",
                  },
                  Object {
                    "label": "Cat 2",
                    "option": "cat_2",
                  },
                ],
                "schemaType": "enum",
                "scope": "public",
                "searchPageConfig": Object {
                  "group": "primary",
                  "label": "Category",
                },
              }
            }
            getHandleChangedValueFn={[Function]}
            idPrefix="SearchFiltersMobile"
            initialValues={[Function]}
            intl={
              Object {
                "formatDate": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelativeTime": [Function],
                "formatTime": [Function],
                "now": [Function],
              }
            }
            key="SearchFiltersMobile.category"
            liveEdit={true}
            showAsPopup={false}
            urlQueryParams={Object {}}
          />
          <FilterComponent
            config={
              Object {
                "key": "price",
                "label": "Price",
                "max": 1000,
                "min": 0,
                "schemaType": "price",
                "step": 5,
              }
            }
            getHandleChangedValueFn={[Function]}
            idPrefix="SearchFiltersMobile"
            initialValues={[Function]}
            intl={
              Object {
                "formatDate": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelativeTime": [Function],
                "formatTime": [Function],
                "now": [Function],
              }
            }
            key="SearchFiltersMobile.price"
            liveEdit={true}
            showAsPopup={false}
            urlQueryParams={Object {}}
          />
          <FilterComponent
            config={
              Object {
                "key": "keywords",
                "label": "Keyword",
                "schemaType": "text",
              }
            }
            getHandleChangedValueFn={[Function]}
            idPrefix="SearchFiltersMobile"
            initialValues={[Function]}
            intl={
              Object {
                "formatDate": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelativeTime": [Function],
                "formatTime": [Function],
                "now": [Function],
              }
            }
            key="SearchFiltersMobile.keywords"
            liveEdit={true}
            showAsPopup={false}
            urlQueryParams={Object {}}
          />
          <FilterComponent
            config={
              Object {
                "editListingPageConfig": Object {
                  "label": "Category",
                },
                "includeForProcessAliases": Array [
                  "flex-booking-default-process/release-1",
                ],
                "indexForSearch": true,
                "key": "amenities",
                "listingPageConfig": Object {
                  "label": "Category",
                },
                "schemaOptions": Array [
                  Object {
                    "label": "Dog 1",
                    "option": "dog_1",
                  },
                  Object {
                    "label": "Dog 2",
                    "option": "dog_2",
                  },
                ],
                "schemaType": "multi-enum",
                "scope": "public",
                "searchPageConfig": Object {
                  "group": "secondary",
                  "label": "Amenities",
                },
              }
            }
            getHandleChangedValueFn={[Function]}
            idPrefix="SearchFiltersMobile"
            initialValues={[Function]}
            intl={
              Object {
                "formatDate": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelativeTime": [Function],
                "formatTime": [Function],
                "now": [Function],
              }
            }
            key="SearchFiltersMobile.amenities"
            liveEdit={true}
            showAsPopup={false}
            urlQueryParams={Object {}}
          />
        </SearchFiltersMobile>
        <MainPanelHeader
          className="mainPanel"
          isSortByActive={true}
          listingsAreLoaded={true}
          noResultsInfo={
            <NoSearchResultsMaybe
              listingsAreLoaded={true}
              location={
                Object {
                  "search": "",
                }
              }
              resetAll={[Function]}
              totalItems={22}
            />
          }
          resultsCount={22}
          rootClassName={null}
          searchInProgress={false}
          searchListingsError={null}
          sortByComponent={
            <injectIntl(SortBy)
              contentPlacementOffset={-14}
              hasConflictingFilters={false}
              isConflictingFilterActive={false}
              mode="desktop"
              onSelect={[Function]}
              selectedFilters={Object {}}
              showAsPopup={true}
            />
          }
        />
        <div
          className="listings"
        >
          <SearchResultsPanel
            className="searchListingsPanel"
            isMapVariant={false}
            listings={Array []}
            pagination={
              Object {
                "page": 1,
                "perPage": 12,
                "totalItems": 22,
                "totalPages": 2,
              }
            }
            rootClassName={null}
            search={Object {}}
          />
        </div>
      </div>
    </div>
  </div>
  <injectIntl(Footer) />
</Page>
`;
