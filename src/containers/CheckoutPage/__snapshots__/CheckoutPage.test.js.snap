// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CheckoutPage matches snapshot 1`] = `
<Page
  scrollingDisabled={false}
  title="CheckoutPage.default-buying-products.title"
>
  <div
    className="topbar"
  >
    <NamedLink
      className="home"
      name="LandingPage"
    >
      <Logo
        className="logoMobile"
        format="mobile"
        title="CheckoutPage.goToLandingPage"
      />
      <Logo
        alt="CheckoutPage.goToLandingPage"
        className="logoDesktop"
        format="desktop"
      />
    </NamedLink>
  </div>
  <div
    className="contentContainer"
  >
    <AspectRatioWrapper
      className="aspectWrapper"
      height={400}
      rootClassName={null}
      width={400}
    >
      <ResponsiveImage
        alt="listing1 title"
        className={null}
        image={null}
        noImageMessage={null}
        rootClassName="rootForImage"
        sizes={null}
        variants={Array []}
      />
    </AspectRatioWrapper>
    <div
      className="avatarWrapper avatarMobile"
    >
      <AvatarMedium
        disableProfileLink={true}
        user={
          Object {
            "attributes": Object {
              "banned": false,
              "deleted": false,
              "profile": Object {
                "abbreviatedName": "TT",
                "displayName": "author display name",
              },
            },
            "id": UUID {
              "_sdkType": "UUID",
              "uuid": "author",
            },
            "type": "user",
          }
        }
      />
    </div>
    <div
      className="bookListingContainer"
    >
      <div
        className="heading"
      >
        <h1
          className="title"
        >
          CheckoutPage.default-buying-products.title
        </h1>
        <h2
          className="detailsTitleMobile"
        >
          <MemoizedFormattedMessage
            id="CheckoutPage.listingTitle"
            values={
              Object {
                "listingTitle": "listing1 title",
              }
            }
          />
        </h2>
      </div>
      <div
        className="priceBreakdownContainer"
      />
      <section
        className="paymentContainer"
      >
        <injectIntl(StripePaymentForm)
          askShippingDetails={true}
          authorDisplayName="author display name"
          className="paymentForm"
          confirmPaymentError={null}
          defaultPaymentMethod={null}
          formId="CheckoutPagePaymentForm"
          hasHandledCardPayment={null}
          inProgress={false}
          initialValues={
            Object {
              "name": "currentUser first name currentUser last name",
              "recipientName": "currentUser first name currentUser last name",
            }
          }
          initiateOrderError={null}
          isBooking={false}
          isFuzzyLocation={false}
          loadingData={true}
          locale="en"
          marketplaceName="MarketplaceX"
          onStripeInitialized={[Function]}
          onSubmit={[Function]}
          paymentIntent={null}
          showInitialMessageInput={true}
          showPickUplocation={false}
          stripePublishableKey="pk_test_"
          totalPrice={null}
        />
      </section>
    </div>
    <div
      className="detailsContainerDesktop"
    >
      <AspectRatioWrapper
        className="detailsAspectWrapper"
        height={400}
        rootClassName={null}
        width={400}
      >
        <ResponsiveImage
          alt="listing1 title"
          className={null}
          image={null}
          noImageMessage={null}
          rootClassName="rootForImage"
          sizes={null}
          variants={Array []}
        />
      </AspectRatioWrapper>
      <div
        class="listingDetailsWrapper"
      >
        <div
          className="avatarWrapper"
        >
          <AvatarMedium
            disableProfileLink={true}
            user={
              Object {
                "attributes": Object {
                  "banned": false,
                  "deleted": false,
                  "profile": Object {
                    "abbreviatedName": "TT",
                    "displayName": "author display name",
                  },
                },
                "id": UUID {
                  "_sdkType": "UUID",
                  "uuid": "author",
                },
                "type": "user",
              }
            }
          />
        </div>
        <div
          className="detailsHeadings"
        >
          <h2
            className="detailsTitle"
          >
            <NamedLink
              name="ListingPage"
              params={
                Object {
                  "id": "listing1",
                  "slug": "listing1-title",
                }
              }
            >
              listing1 title
            </NamedLink>
          </h2>
        </div>
        <h3
          className="orderBreakdownTitle"
        >
          <MemoizedFormattedMessage
            id="CheckoutPage.default-buying-products.orderBreakdown"
          />
        </h3>
        <hr
          className="totalDivider"
        />
      </div>
    </div>
  </div>
</Page>
`;
