// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TransactionPanel - Order enquired matches snapshot 1`] = `
<div
  className="root"
>
  <div
    className="container"
  >
    <div
      className="txInfo"
    >
      <DetailCardImage
        avatarWrapperClassName="avatarWrapperMobile"
        image={null}
        isCustomer={true}
        listingImageConfig={
          Object {
            "aspectHeight": 1,
            "aspectWidth": 1,
            "variantPrefix": "listing-card",
          }
        }
        listingTitle="listing1 title"
        provider={null}
        rootClassName="imageWrapperMobile"
      />
      <PanelHeading
        customerName={
          <UserDisplayName
            bannedUserDisplayName={null}
            className={null}
            deletedUserDisplayName={null}
            intl={
              Object {
                "formatDate": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelativeTime": [Function],
                "formatTime": [Function],
                "now": [Function],
              }
            }
            rootClassName={null}
            user={null}
          />
        }
        isCustomerBanned={false}
        isPendingPayment={false}
        listingDeleted={false}
        listingId="listing1"
        listingTitle="listing1 title"
        processName="flex-product-default-process"
        processState="enquiry"
        providerName={
          <UserDisplayName
            bannedUserDisplayName={null}
            className={null}
            deletedUserDisplayName={null}
            intl={
              Object {
                "formatDate": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelativeTime": [Function],
                "formatTime": [Function],
                "now": [Function],
              }
            }
            rootClassName={null}
            user={null}
          />
        }
        transactionRole="customer"
      />
      <div
        className="orderDetails"
      >
        <div
          className="orderDetailsMobileSection"
        >
          <BreakdownMaybe
            orderBreakdown={null}
          />
          <DiminishedActionButtonMaybe
            onOpenDisputeModal={[Function]}
          />
        </div>
        <DeliveryInfoMaybe
          className="deliveryInfoSection"
          listing={
            Object {
              "attributes": Object {
                "deleted": false,
                "description": "listing1 description",
                "geolocation": LatLng {
                  "_sdkType": "LatLng",
                  "lat": 40,
                  "lng": 60,
                },
                "price": Money {
                  "_sdkType": "Money",
                  "amount": 5500,
                  "currency": "USD",
                },
                "publicData": Object {},
                "state": "published",
                "title": "listing1 title",
              },
              "id": UUID {
                "_sdkType": "UUID",
                "uuid": "listing1",
              },
              "type": "listing",
            }
          }
          locale="en"
        />
      </div>
      <FeedSection
        activityFeed={null}
        fetchMessagesError={null}
        hasMessages={true}
        hasTransitions={false}
        initialMessageFailed={false}
        rootClassName="feedContainer"
      />
      <SendMessageForm
        formId="TransactionPanel.SendMessageForm"
        inProgress={false}
        messagePlaceholder="TransactionPanel.sendMessagePlaceholder"
        onBlur={[Function]}
        onFocus={[Function]}
        onSubmit={[Function]}
        rootClassName="sendMessageForm"
        sendMessageError={null}
      />
    </div>
    <div
      className="asideDesktop"
    >
      <div
        className="stickySection"
      >
        <div
          className="detailCard"
        >
          <DetailCardImage
            avatarWrapperClassName="avatarWrapperDesktop"
            image={null}
            isCustomer={true}
            listingImageConfig={
              Object {
                "aspectHeight": 1,
                "aspectWidth": 1,
                "variantPrefix": "listing-card",
              }
            }
            listingTitle="listing1 title"
            provider={null}
          />
          <DetailCardHeadingsMaybe
            listingTitle={
              <NamedLink
                name="ListingPage"
                params={
                  Object {
                    "id": "listing1",
                    "slug": "listing1-title",
                  }
                }
              >
                listing1 title
              </NamedLink>
            }
          />
          <BreakdownMaybe
            className="breakdownContainer"
            orderBreakdown={null}
          />
        </div>
        <DiminishedActionButtonMaybe
          onOpenDisputeModal={[Function]}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`TransactionPanel - Sale enquired matches snapshot 1`] = `
<div
  className="root"
>
  <div
    className="container"
  >
    <div
      className="txInfo"
    >
      <DetailCardImage
        avatarWrapperClassName="avatarWrapperMobile"
        image={null}
        isCustomer={false}
        listingImageConfig={
          Object {
            "aspectHeight": 1,
            "aspectWidth": 1,
            "variantPrefix": "listing-card",
          }
        }
        listingTitle="listing1 title"
        provider={null}
        rootClassName="imageWrapperMobile"
      />
      <div
        className="avatarWrapperProviderDesktop"
      >
        <AvatarLarge
          className="avatarDesktop"
          user={null}
        />
      </div>
      <PanelHeading
        customerName={
          <UserDisplayName
            bannedUserDisplayName={null}
            className={null}
            deletedUserDisplayName={null}
            intl={
              Object {
                "formatDate": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelativeTime": [Function],
                "formatTime": [Function],
                "now": [Function],
              }
            }
            rootClassName={null}
            user={null}
          />
        }
        isCustomerBanned={false}
        isPendingPayment={false}
        listingDeleted={false}
        listingId="listing1"
        listingTitle="listing1 title"
        processName="flex-product-default-process"
        processState="enquiry"
        providerName={
          <UserDisplayName
            bannedUserDisplayName={null}
            className={null}
            deletedUserDisplayName={null}
            intl={
              Object {
                "formatDate": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelativeTime": [Function],
                "formatTime": [Function],
                "now": [Function],
              }
            }
            rootClassName={null}
            user={null}
          />
        }
        transactionRole="provider"
      />
      <div
        className="orderDetails"
      >
        <div
          className="orderDetailsMobileSection"
        >
          <BreakdownMaybe
            orderBreakdown={null}
          />
          <DiminishedActionButtonMaybe
            onOpenDisputeModal={[Function]}
          />
        </div>
        <DeliveryInfoMaybe
          className="deliveryInfoSection"
          listing={
            Object {
              "attributes": Object {
                "deleted": false,
                "description": "listing1 description",
                "geolocation": LatLng {
                  "_sdkType": "LatLng",
                  "lat": 40,
                  "lng": 60,
                },
                "price": Money {
                  "_sdkType": "Money",
                  "amount": 5500,
                  "currency": "USD",
                },
                "publicData": Object {},
                "state": "published",
                "title": "listing1 title",
              },
              "id": UUID {
                "_sdkType": "UUID",
                "uuid": "listing1",
              },
              "type": "listing",
            }
          }
          locale="en"
        />
      </div>
      <FeedSection
        activityFeed={null}
        fetchMessagesError={null}
        hasMessages={true}
        hasTransitions={false}
        initialMessageFailed={false}
        rootClassName="feedContainer"
      />
      <SendMessageForm
        formId="TransactionPanel.SendMessageForm"
        inProgress={false}
        messagePlaceholder="TransactionPanel.sendMessagePlaceholder"
        onBlur={[Function]}
        onFocus={[Function]}
        onSubmit={[Function]}
        rootClassName="sendMessageForm"
        sendMessageError={null}
      />
    </div>
    <div
      className="asideDesktop"
    >
      <div
        className="stickySection"
      >
        <div
          className="detailCard"
        >
          <DetailCardImage
            avatarWrapperClassName="avatarWrapperDesktop"
            image={null}
            isCustomer={false}
            listingImageConfig={
              Object {
                "aspectHeight": 1,
                "aspectWidth": 1,
                "variantPrefix": "listing-card",
              }
            }
            listingTitle="listing1 title"
            provider={null}
          />
          <DetailCardHeadingsMaybe
            listingTitle={
              <NamedLink
                name="ListingPage"
                params={
                  Object {
                    "id": "listing1",
                    "slug": "listing1-title",
                  }
                }
              >
                listing1 title
              </NamedLink>
            }
          />
          <BreakdownMaybe
            className="breakdownContainer"
            orderBreakdown={null}
          />
        </div>
        <DiminishedActionButtonMaybe
          onOpenDisputeModal={[Function]}
        />
      </div>
    </div>
  </div>
</div>
`;
